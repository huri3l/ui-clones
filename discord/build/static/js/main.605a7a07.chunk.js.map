{"version":3,"sources":["components/Layout/styles.ts","assets/Logo.svg","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Role","User","UserRow","nickname","isBot","UserList","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","type","placeholder","Layout","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.605a7a07.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// ? Template rows meaning\r\n// SL - Server List\r\n// SN - Server Name\r\n// CI - Channel Info\r\n// CL - Channel List\r\n// CD - Channel Data\r\n// UL - User List\r\n// UI - User Info\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n\r\n  grid-template-columns: 71px 240px auto 240px;\r\n  grid-template-rows: 46px auto 52px;\r\n\r\n  grid-template-areas: \r\n    'SL SN CI CI'\r\n    'SL CL CD UL'\r\n    'SL UI CD UL';\r\n\r\n  height: 100vh;\r\n`;","export default __webpack_public_path__ + \"static/media/Logo.fff47e76.svg\";","import styled from \"styled-components\";\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n\r\n  margin-bottom: 8px;\r\n\r\n  background-color: ${props => props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  > img {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n\r\n  &::before {\r\n    width: 9px;\r\n    height: 9px;\r\n    \r\n    position: absolute;\r\n    left: -17px;\r\n    top: calc(50% - 4.5px);\r\n\r\n    background-color: var(--white);\r\n    border-radius: 50%;\r\n\r\n    content: '';\r\n    display: ${props => props.hasNotifications ? 'inline' : 'none'};\r\n  }\r\n\r\n  &::after{ \r\n    background-color: var(--notification);\r\n    width: auto;\r\n    height: 16px;\r\n\r\n    padding: 0 4px;\r\n    \r\n    position: absolute;\r\n    bottom: -4px;\r\n    right: -4px;\r\n\r\n    border-radius: 12px;\r\n    border: 4px solid var(--quaternary);\r\n\r\n    text-align: right;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    color: var(--white);\r\n\r\n    content: '${props => props.mentions && props.mentions}';\r\n    display: ${props => props.mentions && props.mentions > 0 ? 'inline' : 'none'}\r\n  }\r\n\r\n  transition: border-radius .2s, background-color .2s;\r\n\r\n  &:active, \r\n  &:hover {\r\n    border-radius: 16px;\r\n    background-color: ${(props) => \r\n      props.isHome? 'var(--rocketseat)' : 'var(--discord)'}; \r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport Logo from '../../assets/Logo.svg';\r\n\r\nimport { Button } from './styles';\r\n\r\nexport interface Props {\r\n  selected?: boolean;\r\n  isHome?: boolean;\r\n  hasNotifications?: boolean;\r\n  mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n  selected,\r\n  isHome,\r\n  hasNotifications,\r\n  mentions\r\n}) => {\r\n  return (\r\n    <Button\r\n      isHome={isHome}\r\n      hasNotifications={hasNotifications}\r\n      mentions={mentions}\r\n      className={selected ? 'active' : ''}\r\n    >\r\n      {isHome && <img src={Logo} alt=\"Rocketseat\" />}\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default ServerButton;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: SL;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n  background-color: var(--tertiary);\r\n  padding: 11px 0;\r\n\r\n  max-height: 100vh;\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Separator = styled.div`\r\n  width: 32px;\r\n  border-bottom: 2px solid var(--quaternary);\r\n  \r\n  margin-bottom: 8px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport ServerButton from '../ServerButton';\r\n\r\nimport { Container, Separator } from './styles';\r\n\r\nconst ServerList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <ServerButton isHome />\r\n\r\n      <Separator />\r\n\r\n      <ServerButton hasNotifications />\r\n      <ServerButton mentions={3} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton mentions={23} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default ServerList;","import styled from 'styled-components';\r\nimport { ExpandMore } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  padding: 0 11px 0 16px;\r\n\r\n  background-color: var(--secondary);\r\n\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: var(--white); \r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n  width: 28px;\r\n  height: 28px;\r\n\r\n  color: var(--white);\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\nconst ServerName: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Servidor do Cabeça</Title>\r\n      <ExpandIcon />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ServerName;","import styled from 'styled-components';\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CI;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 0 17px;\r\n  background-color: var(--primary);\r\n\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-left: 9px;\r\n\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  height: 24px;\r\n  width: 1px;\r\n\r\n  background: var(--white);\r\n  opacity: 0.2;\r\n\r\n  margin: 0 13px;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n  font-size: 15px;\r\n  color: var(--gray);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, Title, Separator, Description } from './styles';\r\n\r\nconst ChannelInfo: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <HashtagIcon />\r\n      <Title>chat-livre</Title>\r\n      <Separator />\r\n      <Description>Canal aberto para conversas</Description>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChannelInfo;","import styled from 'styled-components';\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n  padding: 5px 3px;\r\n  border-radius: 5px;\r\n\r\n  background-color: transparent;\r\n  transition: background-color .2s;\r\n\r\n  > div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  > div span {\r\n    margin-left: 5px;\r\n    color: var(--senary);\r\n  }\r\n\r\n  > div:nth-child(2) svg {\r\n    display: none;\r\n    transition: display .2s;\r\n  }\r\n\r\n  &:hover, &.active {\r\n    background-color: var(--quinary);\r\n\r\n    > div span {\r\n      color: var(--white);\r\n    }\r\n\r\n    > div svg {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n\r\n\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const InviteIcon = styled(PersonAdd)`\r\n  width: 16px; \r\n  height: 16px;\r\n\r\n  color: var(--symbol);\r\n\r\n  transition: color .2s;\r\n\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 16px; \r\n  height: 16px;\r\n\r\n  margin-left: 4px;\r\n\r\n  color: var(--symbol);\r\n\r\n  transition: color .2s;\r\n\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props {\r\n  channelName: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({\r\n  channelName,\r\n  selected\r\n}) => {\r\n  return (\r\n    <Container className={selected ? 'active' : ''}>\r\n      <div>\r\n        <HashtagIcon />\r\n        <span>{channelName}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <InviteIcon />\r\n        <SettingsIcon />\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChannelButton;","import styled from \"styled-components\";\r\nimport { Add } from 'styled-icons/material';\r\n\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CL;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px 9.5px 0 16px;\r\n  background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  margin-bottom: 6px;\r\n\r\n  > span {\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n  width: 21px;\r\n  height: 21px;\r\n\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\n\r\nimport ChannelButton from '../ChannelButton';\r\n\r\nimport { Container, Category, AddCategoryIcon } from './styles';\r\n\r\nconst ChannelList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Category>\r\n        <span>Canais de texto</span>\r\n        <AddCategoryIcon />\r\n      </Category>\r\n      <ChannelButton channelName=\"chat-livre\" />\r\n      <ChannelButton channelName=\"trabalho\" />\r\n      <ChannelButton channelName=\"lolzinho\" />\r\n      <ChannelButton channelName=\"valorant\" />\r\n      <ChannelButton channelName=\"csgo\" />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChannelList;","import styled from 'styled-components';\r\nimport { Mic, Headset, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: UI;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  padding: 10px;\r\n  background-color: var(--quaternary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n\r\n  background-color: var(--gray);\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  margin-left: 8px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > strong {\r\n    color: var(--white);\r\n    display: block;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  > span {\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > svg:not(:first-child) {\r\n    margin-left: 7px;\r\n  }\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--white);\r\n  opacity: .7;\r\n  \r\n  cursor: pointer;\r\n\r\n  transition: opacity .2s;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--white);\r\n  opacity: .7;\r\n  \r\n  cursor: pointer;\r\n\r\n  transition: opacity .2s;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--white);\r\n  opacity: .7;\r\n  \r\n  cursor: pointer;\r\n\r\n  transition: opacity .2s;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`; \r\n","import React from 'react';\r\n\r\nimport { \r\n  Container,\r\n  Profile,\r\n  Avatar,\r\n  UserData,\r\n  Icons,\r\n  MicIcon,\r\n  HeadphoneIcon,\r\n  SettingsIcon \r\n} from './styles';\r\n\r\nconst UserInfo: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Profile>\r\n        <Avatar />\r\n        <UserData>\r\n          <strong>huriel</strong>\r\n          <span>#7954</span>\r\n\r\n        </UserData>\r\n      </Profile>\r\n\r\n      <Icons>\r\n        <MicIcon />\r\n        <HeadphoneIcon />\r\n        <SettingsIcon />\r\n      </Icons>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserInfo;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: UL;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 3px 6px 0 16px;\r\n  background-color: var(--secondary);\r\n\r\n  max-height: calc(100vh - 46px);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n  margin-top: 20px;\r\n\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: var(--gray);\r\n`;\r\n\r\nexport const User = styled.div`\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n\r\n  border-radius: 4px;\r\n  background: transparent;\r\n  transition: background .2s;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  > strong {\r\n    margin-left: 13px;\r\n    font-weight: 500;\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n\r\n  > span {\r\n    margin-left: 9px;\r\n\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  flex-shrink: 0;\r\n\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  border-radius: 50%;\r\n  background-color: var(--primary);\r\n\r\n  &.bot {\r\n    background-color: var(--mention-detail);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, Role, User, Avatar } from './styles';\r\n\r\ninterface UserProps {\r\n  nickname: string;\r\n  isBot ?: boolean;\r\n}\r\n\r\nconst UserRow: React.FC<UserProps> = ({\r\n  nickname,\r\n  isBot\r\n}) => {\r\n  return (\r\n    <User>\r\n      <Avatar className={isBot ? 'bot' : ''} />\r\n\r\n      <strong>{nickname}</strong>\r\n\r\n      {isBot && <span>Bot</span>}\r\n    </User>\r\n  )\r\n}\r\n\r\nconst UserList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Role>Disponível - 1 </Role>\r\n      <UserRow nickname=\"Huriel Lopes\" />\r\n\r\n      <Role>Offline - 18 </Role>\r\n      <UserRow nickname=\"Chrystian Paim\" isBot />\r\n      <UserRow nickname=\"Gregori Schuster\" />\r\n      <UserRow nickname=\"Marcelo Lupatini\" />\r\n      <UserRow nickname=\"Felipe Alves\" />\r\n      <UserRow nickname=\"Emerson da Rocha\" />\r\n      <UserRow nickname=\"Guilherme Tessaro\" />\r\n      <UserRow nickname=\"Rodrigo Mieres\" />\r\n      <UserRow nickname=\"Marcelo Portella\" />\r\n      <UserRow nickname=\"Fernando Meyer\" />\r\n      <UserRow nickname=\"Guilherme Reis\" />\r\n      <UserRow nickname=\"Jovita Telles\" />\r\n      <UserRow nickname=\"Victor Hugo Zatti\" />\r\n      <UserRow nickname=\"Paulo Gabriel da Silva Ferreira\" isBot />\r\n      <UserRow nickname=\"Lucas Lavnicki\" isBot />\r\n      <UserRow nickname=\"Lucas Pereira\" />\r\n      <UserRow nickname=\"Eduardo Schneiker\" />\r\n      <UserRow nickname=\"Patrick Piccini\" />\r\n      <UserRow nickname=\"Éderson Junior\" isBot />\r\n      <UserRow nickname=\"Fernando Junior\" isBot />\r\n      <UserRow nickname=\"Lucas Rebellato\" />\r\n      <UserRow nickname=\"Lucas Silva Rocha\" />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserList;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  padding: 4px 16px;\r\n  margin-right: 4px;\r\n\r\n  background-color: transparent;\r\n\r\n  &.mention {\r\n    background-color: var(--mention-message);\r\n\r\n    border-left: 2px solid var(--mention-detail);\r\n    padding-left: 14px;\r\n  }\r\n\r\n  & + div {\r\n    margin-top: 13px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  flex-shrink: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background-color: var(--secondary);\r\n  border-radius: 50%;\r\n\r\n  &.bot {\r\n    background-color: var(--mention-detail);\r\n  }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  min-height: 40px;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > strong {\r\n    color: var(--white);\r\n    font-size: 16px;\r\n  }\r\n\r\n  > span {\r\n    margin-left: 6px;\r\n\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n\r\n  > time {\r\n    margin-left: 6px;\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: left;\r\n  font-size: 16px;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n  color: var(--link);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles';\r\n\r\nexport { Mention } from './styles';\r\n\r\nexport interface Props {\r\n  author: string;\r\n  date: string;\r\n  content: string | React.ReactElement | React.ReactNode;\r\n  hasMention?: boolean;\r\n  isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n  author,\r\n  date,\r\n  content,\r\n  hasMention,\r\n  isBot\r\n}) => {\r\n  return (\r\n    <Container className={hasMention ? 'mention' : ''}>\r\n      <Avatar className={isBot ? 'bot' : ''} />\r\n      <Message>\r\n        <Header>\r\n          <strong>{author}</strong>\r\n\r\n          {isBot && <span>Bot</span>}\r\n\r\n          <time>{date}</time>\r\n        </Header>\r\n        <Content>{content}</Content>\r\n      </Message>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChannelMessage;","import styled from 'styled-components';\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CD;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  background-color: var(--primary);\r\n  \r\n`;\r\n\r\nexport const Messages = styled.div`\r\n  padding: 20px 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  max-height: calc(100vh - 46px - 67px);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  padding: 0 16px;\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  padding: 0 10px 0 57px;\r\n\r\n  border-radius: 7px;\r\n  \r\n  color: var(--white);\r\n  background-color: var(--chat-input);\r\n\r\n  position: relative;\r\n\r\n  &::placeholder {\r\n    color: var(--gray);\r\n\r\n  }\r\n\r\n  ~ svg {\r\n    position: relative;\r\n    top: -50%;\r\n    left: 14px;\r\n    transition: 180ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  color: var(--gray);\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage';\r\n\r\nimport { Container, Messages, Input, InputWrapper, InputIcon } from './styles';\r\n\r\nconst ChannelData: React.FC = () => {\r\n  const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  useEffect(() => {\r\n    const div = messagesRef.current;\r\n\r\n    if (div) {\r\n      div.scrollTop = div.scrollHeight;\r\n    }\r\n  }, [messagesRef])\r\n\r\n  return (\r\n    <Container>\r\n      <Messages ref={messagesRef}>\r\n        <ChannelMessage \r\n          author=\"Chrystian Paim\"\r\n          date=\"18/12/2020\"\r\n          content={\r\n            <>\r\n              <Mention>@huriel</Mention> me carrega no brawl pfv\r\n            </>\r\n          }\r\n          hasMention\r\n          isBot\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"dps eu carrego man\"\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"enfim, deixando minha esquezofrenia de lado...\"\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"pessoal, eu fiz esse ui clone pra testar alguns conhecimentos no frontend, ainda to aprendendo e batalhando, mas to gostando muito\"\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"esse é o meu primeiro estudo realizado com react, typescript e styled components, \r\n          uma stack que venho almejando usar a muito tempo, \r\n          mas ainda estava aprendendo a base\"\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"e gostaria de agradecer à todos os homenageados aqui pelo suporte que tenho recebido, seja para quem me guiou no início na programação, \r\n          para quem me incentiva todos os dias a continuar seguindo em frente, e também para aqueles que apoiam o meu conteúdo no youtube :D\"\r\n        />\r\n\r\n        <ChannelMessage \r\n          author=\"huriel\"\r\n          date=\"18/12/2020\"\r\n          content=\"ofereço a vocês o meu mais sincero obrigado, por de certa forma me influenciarem a ser um profissional melhor!\"\r\n        />\r\n\r\n      </Messages>\r\n\r\n      <InputWrapper>\r\n        <Input type=\"text\" placeholder=\"Conversar em #chat-livre\" />\r\n        <InputIcon />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ChannelData;","import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport ServerList from '../ServerList';\r\nimport ServerName from '../ServerName';\r\nimport ChannelInfo from '../ChannelInfo';\r\nimport ChannelList from '../ChannelList';\r\nimport UserInfo from '../UserInfo';\r\nimport UserList from '../UserList';\r\nimport ChannelData from '../ChannelData';\r\nimport ChannelMessage from '../ChannelMessage';\r\n\r\nconst Layout: React.FC = () => {\r\n  return (\r\n    <Grid>\r\n      <ServerList />\r\n      <ServerName />\r\n      <ChannelInfo />\r\n      <ChannelList />\r\n      <UserInfo />\r\n      <ChannelData />\r\n      <UserList />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  *, button, input {\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  :root {\r\n    --primary: #36393f;\r\n    --secondary: #2f3136;\r\n    --tertiary: rgb(32,34,37);\r\n    --quaternary: #292b2f;\r\n    --quinary: #393d42;\r\n    --senary: #828386;\r\n \r\n    --white: #fff;\r\n    --gray: #8a8c90;\r\n    --chat-input: rgb(64,68,75);\r\n    --symbol: #74777a;\r\n \r\n    --notification: #f84a4b;\r\n    --discord: #6e86d6;\r\n    --mention-detail: #f9a839;\r\n    --mention-message: #413f3f;\r\n \r\n    --link: #5d80d6;\r\n \r\n    --rocketseat: #6633cc;\r\n  }\r\n`;","import React from 'react';\n\nimport Layout from './components/Layout';\nimport GlobalStyles from './styles/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}